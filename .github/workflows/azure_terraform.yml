name: Azure_Deploy Infrastructure
on: 
  workflow_dispatch:
   
env: 
    ROOT_PATH: '${{github.workspace}}/terraform/Azure'
    ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
    ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
    ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
    ARM_STORAGE_SECRET: ${{secrets.AZURE_STORAGE_SECRET}}

jobs:
  terraform_plan:
    name: Terraform pre-deploy
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Terraform
      uses: hashicorp/setup-terraform@v1
  
    - name: Terraform Init
      run: terraform init -backend-config="access_key=${{env.AZURE_STORAGE_SECRET}}"
      working-directory: ${{env.ROOT_PATH}}
      
    - name: Terraform Plan
      run: terraform plan
      working-directory: ${{env.ROOT_PATH}} 

  terraform_apply:
    name: Terraform deploy
    runs-on: ubuntu-latest
    needs: [terraform_plan]

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
  
      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Terraform
        uses: hashicorp/setup-terraform@v1
    
      - name: Terraform Init
        run: terraform init -backend-config="access_key=${{ env.AZURE_STORAGE_SECRET }}"
        working-directory: ${{env.ROOT_PATH}} 

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{env.ROOT_PATH}}
        
